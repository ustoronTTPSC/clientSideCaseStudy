<!-- XML definition for actions.xml files -->
<!-- Within the comments, syntax of the form "objecttype.name" refers to the value of the "name" attribute
     within the "objecttype" element -->

<!ELEMENT listofactions ( include | objecttype | internal )* >

<!ELEMENT objecttype (action | internal)*>

<!ATTLIST objecttype class NMTOKEN #REQUIRED >              <!-- object class for the enclosed actions -->
<!ATTLIST objecttype name ID #REQUIRED >                    <!-- shorthand name used in nav.xml and actionmodels.xml to reference this object type -->
<!ATTLIST objecttype resourceBundle CDATA #IMPLIED>         <!-- specifies the class name of the default resource bundle to use for the properties of the action that are to be localized -->
<!ATTLIST objecttype incremental CDATA #IMPLIED>            <!-- Incremental set on Objecttype specifies objecttype attributes can not be updated for existing objecttype -->


<!ELEMENT action ( command?, component?, access?, includeFilter*, excludeFilter*, internal? ) > <!-- access subtag is deprecated -->
<!ATTLIST action name CDATA #REQUIRED >                     <!-- used in actionmodels.xml and nav.xml to reference this action -->
                                                            <!-- also used in action.properties to define resources for this action using the form <objecttype.name>.<action.name>.<property>=<property value> -->
<!ATTLIST action ajax ( page | component | row | thirdLevelNav | popupMenu ) #IMPLIED >  <!-- specifies the scope of the ajax refresh -->
<!ATTLIST action ajaxActionClass CDATA #IMPLIED >           <!-- specifies the commandClass to invoke ajax request on -->
<!ATTLIST action cad ( true ) #IMPLIED >                    <!-- indicates if this action is valid only within the Wildfire Embedded Browser -->
<!ATTLIST action enabledwhensuspended ( true ) #IMPLIED >   <!-- enabled when project is suspended/canceled/completed -->
<!ATTLIST action installType CDATA #IMPLIED >               <!-- indicate applicable actions based upon what is installed; known values "WINDCHILL PDM","PDM|PJL","PDM" -->
<!ATTLIST action multiselect ( false | true ) #IMPLIED >    <!-- specifies if an action is to be displayed on multi select rows.For such an action selectRequired attribute should also be true.-->
<!ATTLIST action selectRequired ( false | true ) #IMPLIED > <!-- determines if UI should not allow action to proceed if nothing is selected.  Results in "Nothing Selected" popup.  
                                                                 The onClick function will be called before it checks if items are selected in the table so the onClick function
                                                                 will need to check if items in the table are selected. -->
<!ATTLIST action afterJS CDATA #IMPLIED >                   <!-- specify the js function name to invoke client side validation for a wizard step when step is finished -->
<!ATTLIST action beforeJS CDATA #IMPLIED >                  <!-- specify the js function name to invoke client side validation for a wizard step when step is loaded -->
<!ATTLIST action afterVK CDATA #IMPLIED >                   <!-- specify the server validator name to invoke server side validation for a wizard step when step is finished -->
<!ATTLIST action beforeVK CDATA #IMPLIED >                  <!-- specify the server validator name to invoke server side validation for a wizard step when step is loaded -->
<!ATTLIST action id CDATA #IMPLIED>                         <!-- Overrides the id of the wizard step (default is type.action) -->
<!ATTLIST action preloadWizardPage ( false | true ) #IMPLIED><!-- specifies that wizard step is to be downloaded when wizard is launched -->
<!ATTLIST action hidden ( false | true ) #IMPLIED>          <!-- specifies that wizard step is to be hidden at first, or for the action to be rendered as non-clickable-->
<!ATTLIST action hotKey CDATA #IMPLIED>                     <!-- specifies that short-cut key to invoke action-->
<!ATTLIST action required ( false | true ) #IMPLIED>        <!-- specifies that wizard step is required, defaults to false -->
<!ATTLIST action resourceBundle CDATA #IMPLIED>             <!-- specifies the class name of the resource bundle to use for the properties of the action that are to be localized -->
<!ATTLIST action checkaccess (false | true) #IMPLIED>       <!-- deprecated, no longer used -->
<!ATTLIST action postloadJS CDATA #IMPLIED>
<!ATTLIST action dtiUpload CDATA #IMPLIED>
<!ATTLIST action dtiDownload CDATA #IMPLIED>
<!ATTLIST action dtiShowAttach CDATA #IMPLIED>
<!ATTLIST action ajaxActionClass CDATA #IMPLIED>            <!-- deprecated, should use onclick attribute with ajax and js code -->
<!ATTLIST action uicomponent NMTOKEN #IMPLIED >             <!-- references entry in roleaccessprefs.xml (uic.name) to specify role based access -->
<!ATTLIST action renderType ( GENERAL | GENERAL_WITH_CONTEXT | PDM ) #IMPLIED >
<!-- URLs generated with renderType of:
<default>               http://<host>/<webapp>/netmarkets/jsp/<objecttype.name>/<action.name>.jsp
GENERAL                 http://<host>/<webapp><command.method>
GENERAL_WITH_CONTEXT    http://<host>/<webapp><command.method>?oid=...
PDM                     url generated by URLActionDelegate; used for template processing or DCA
-->
<!ATTLIST action incremental CDATA #IMPLIED>  <!-- Incremental with action specifies action can be updated incrementally with filter list -->


<!ELEMENT command EMPTY >
<!ATTLIST command class CDATA #IMPLIED >                 <!-- used only when renderType="PDM" or windowType is <default> or normal; in later case class and method are handler of post -->
<!ATTLIST command method CDATA #IMPLIED >                <!-- used only when renderType="PDM" or windowType is <default> or normal; in later case class and method are handler of post -->
<!ATTLIST command url CDATA #IMPLIED >                   <!-- used to override the generated URL, can be just a query string if the value starts with a ? -->

<!ATTLIST command onClick CDATA #IMPLIED >               <!-- 
								used to specify an additional onclick function to call, can be useful for confirming with the user whether to execute special action or not.
								
                                The following are in scope variables that the onClick function can pass as arguments:
                                    event   - The browser event
                                    target  - The Ext object representing the UI component that was ‘clicked’
                                    table   - The Ext table that contains the action, or the tab that contains the tab actions.  This is null if the action is not contained within a table or tab. 
                                
                                For example: 
                                    doFunction (event, target, table)
								
								Certain places where actions are used (e.g. menu bar menu or toolbar on a table) 
								the onclick needs to be a valid expression for an if statement, so the onclick should just be a call to a function.
								The onclick should not contain semi-colons or return statements.
								For example: onClick="doFoo()" or onClick="doFoo(event)" are ok.
								But these would cause js errors: onClick="doFoo();doBar();" or onclick="doFoo();Event.stop(event);"
								
								When the actions are parsed, the action framework will try to repair troublesome onclick definitions 
								and if unsuccessful at repairing will just replace the onclick with an alert. 
								There are warnings logged if the action was repaired, there are errors logged if the onclick couldn't be repaired.
								
								Also, please note that the use of the html encoded character "&apos;" to use a single quote is not necessary; just use a regular
								single quote instead.
								
								If the “selectRequired” attribute is set on the action, the onClick handler will get called before any other handlers.  
								Thus, the onClick handler will need to check if there are items selected in the table.
								-->
								
<!ATTLIST command multiselect NMTOKEN #IMPLIED >         <!-- ? -->
<!ATTLIST command windowType ( applet | new | no_content | normal | page | popup | wizard_step | submitto | lightbox ) #IMPLIED >
<!-- Action resulting from windowType of:
<default>   submit the form (same as "normal")
applet      ?
new         like popup except includes browser bar and will submit the whole form to the popup window.
no_content  no window action
normal      submit the form
wizard_step indicates an action that is meant to be displayed as a wizard step
page        display new page
popup       create popup dialog; typically a wizard; sets some form variables; not modal
lightbox    like new except creates the window in a lightbox.
-->

<!ELEMENT component EMPTY >
<!ATTLIST component name CDATA #REQUIRED >                <!-- component id -->
<!ATTLIST component componentType CDATA #IMPLIED >   <!-- component type should be of  an enum of com.ptc.core.ui.resources.ComponentType -->
<!ATTLIST component typeBased ( false | true ) #IMPLIED>    <!-- url generated should be typeBased or not -->
<!ATTLIST component class CDATA #IMPLIED >                       <!-- for explanation refer the attribute information given in command -->
<!ATTLIST component method CDATA #IMPLIED >                  <!-- for explanation refer the attribute information given in command -->
<!ATTLIST component onClick CDATA #IMPLIED >                   <!-- for explanation refer the attribute information given in command -->
<!ATTLIST component urlParams CDATA #IMPLIED >              <!-- url params that you want to pass along -->
<!ATTLIST component windowType ( applet | new | no_content | normal | page | popup | wizard_step | submitto | lightbox ) #IMPLIED >
 <!-- for explanation refer the attribute information given in command -->

<!ELEMENT access EMPTY >
<!ATTLIST component name ( full | update | read | delete | create ) #REQUIRED >

<!ELEMENT include EMPTY>

<!ATTLIST href name CDATA #REQUIRED >
<!ELEMENT supportedTypes ( type* )>
<!ATTLIST supportedTypes value CDATA #REQUIRED >
<!ATTLIST supportedTypes applyToDescendants ( false | true ) #IMPLIED >

<!ELEMENT nonSupportedTypes ( type* )>
<!ATTLIST nonSupportedTypes value CDATA #REQUIRED>
<!ATTLIST nonSupportedTypes applyToDescendants ( false | true ) #IMPLIED >

<!ELEMENT includeFilter EMPTY>
<!ATTLIST includeFilter name CDATA #REQUIRED >

<!ELEMENT excludeFilter EMPTY>
<!ATTLIST excludeFilter name CDATA #REQUIRED >

<!ELEMENT type EMPTY>
<!ATTLIST type value CDATA #REQUIRED >
<!ATTLIST type applyToDescendants ( false | true ) #IMPLIED >

<!ELEMENT label (#PCDATA)>                     <!--Specifies the label while defining the action  -->
<!ELEMENT title (#PCDATA)>		       <!--Specifies the title while defining the action  -->
<!ELEMENT icon (#PCDATA)>		       <!--Specifies the icon while defining the action  -->
<!ELEMENT tooltip (#PCDATA)>		       <!--Specifies the tooltip while defining the action  -->
<!ELEMENT moreurlinfo (#PCDATA)>               <!--Specifies the moreurlinfo while defining the action  -->